name: Python application test

on:
  push:
    branches: [ "main", "dev"]
  pull_request:
    branches: [ "main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres_test:
        image: postgres:16-bullseye
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST_TEST }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_TEST }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB_TEST }}
        ports:
          - 5433:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        pip install pipenv
        pipenv requirements > requirements.txt
        pip install -r requirements.txt

    - name: Create env file
      run: |
        touch .env
        echo APP_HOST=${{ secrets.APP_HOST }} >> .env
        echo APP_PORT=${{ secrets.APP_PORT }} >> .env
        
        echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
        echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
        echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
        echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        
        echo POSTGRES_USER_TEST=${{ secrets.POSTGRES_USER_TEST }} >> .env
        echo POSTGRES_HOST_TEST=${{ secrets.POSTGRES_HOST_TEST }} >> .env
        echo POSTGRES_PORT_TEST=${{ secrets.POSTGRES_PORT_TEST }} >> .env
        echo POSTGRES_DB_TEST=${{ secrets.POSTGRES_DB_TEST }} >> .env
        echo POSTGRES_PASSWORD_TEST=${{ secrets.POSTGRES_PASSWORD_TEST }} >> .env
        
        echo PGADMIN_EMAIL=${{ secrets.PGADMIN_EMAIL }} >> .env

    - name: Test with pytest
      run: |
        pytest